version: '3'

services:
  starrocks-fe:
    image: starrocks:3.3.7
    build:
      context: .
      args:
        - PRIORITY_NETWORKS=192.168.12.0/24
    container_name: starrocks-fe
    command: ["/bin/sh", "-c", "/opt/starrocks/fe_server.sh"]
    ports:
      - 9030:9030
      - 8030:8030
    environment:
      - ROOT_STARROCKS_PASSWORD=${ROOT_STARROCKS_PASSWORD}
      - STARROCKS_USERNAME=${STARROCKS_USERNAME}
      - STARROCKS_PASSWORD=${STARROCKS_PASSWORD}
      - STARROCKS_DATABASE=${STARROCKS_DATABASE}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    volumes:
      - starrocks-fe:/opt/starrocks/fe
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1000M
    networks:
      yanto-net:
        ipv4_address: 192.168.12.13
    depends_on:
      - starrocks-be
      - starrocks-cn

  starrocks-be:
    image: starrocks:3.3.7
    container_name: starrocks-be
    build:
      context: .
      args:
        - PRIORITY_NETWORKS=192.168.12.0/24
    command: ["/bin/sh", "-c", "/opt/starrocks/be_server.sh"]
    volumes:
      - starrocks-be:/opt/starrocks/be
    ports:
      - 8040:8040
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1500M
    networks:
      yanto-net:
        ipv4_address: 192.168.12.14
      
  starrocks-cn:
    image: starrocks:3.3.7
    container_name: starrocks-cn
    build:
      context: .
      args:
        - PRIORITY_NETWORKS=192.168.12.0/24
    command: ["/bin/sh", "-c", "/opt/starrocks/cn_server.sh"]
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1500M
    networks:
      yanto-net:
        ipv4_address: 192.168.12.15

networks:
  yanto-net:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.12.0/24
          gateway: 192.168.12.1
    external: true

volumes:
  starrocks-fe:
    external: true
  starrocks-be:
    external: true
